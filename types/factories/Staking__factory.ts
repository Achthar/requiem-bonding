/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_req",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sREQ",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gREQ",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warmup",
        type: "uint256",
      },
    ],
    name: "WarmupSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQ",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributor",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distribute",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forfeit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gREQ",
    outputs: [
      {
        internalType: "contract IgREQ",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sREQ",
    outputs: [
      {
        internalType: "contract IsREQ",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondsToNextEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
    ],
    name: "setDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_warmupPeriod",
        type: "uint256",
      },
    ],
    name: "setWarmupLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_claim",
        type: "bool",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyInWarmup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_trigger",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "uint256",
        name: "sBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "warmupInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lock",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warmupPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "gBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604052600c60e08190526b15539055551213d49256915160a21b610100908152620000319160009190620001f1565b503480156200003f57600080fd5b5060405162001fe338038062001fe38339810160408190526200006291620002b4565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b038716620000fd5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a2052455160781b60448201526064015b60405180910390fd5b6001600160a01b038088166080528616620001505760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a207352455160701b6044820152606401620000f4565b6001600160a01b0380871660a0528516620001a35760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a206752455160701b6044820152606401620000f4565b506001600160a01b0390931660c052604080516080810182528381526020810183905290810184905260006060909101819052600292909255600355600491909155600555506200036b9050565b828054620001ff906200032e565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b80516001600160a01b0381168114620002af57600080fd5b919050565b600080600080600080600060e0888a031215620002d057600080fd5b620002db8862000297565b9650620002eb6020890162000297565b9550620002fb6040890162000297565b9450606088015193506080880151925060a088015191506200032060c0890162000297565b905092959891949750929550565b600181811c908216806200034357607f821691505b602082108114156200036557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051611ba0620004436000396000818161033e015281816104a80152818161052001528181610b1501528181610b900152818161109b01528181611137015281816116150152611704015260008181610204015281816103ac0152818161042d015281816105a4015281816109fd01528181610ac001528181610d5c01528181610f910152818161105d015281816112eb0152818161140e01526115d10152600081816102fb01528181610c2601528181610d0101528181610f18015281816111aa01526115260152611ba06000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063990966d5116100b8578063d26700251161007c578063d2670025146102f6578063d866c9d81461031d578063deac361a14610330578063ee487d9e14610339578063f3d86e4a14610360578063ff9413d81461036857600080fd5b8063990966d5146102a2578063af14052c146102b5578063bf376c7a146102bd578063bf7e214f146102d0578063bfe10928146102e357600080fd5b80637a9e5e4b1161010a5780637a9e5e4b146101ec5780638cb649e1146101ff578063900cf0cf1461023e5780639238d5921461027457806392fd2daf146102875780639483c1d71461029a57600080fd5b806320138641146101475780632986c0e51461016257806339f476931461016a5780636746f4c21461017d57806375619ab5146101d7575b600080fd5b61014f61038f565b6040519081526020015b60405180910390f35b61014f610429565b61014f6101783660046118d8565b610489565b6101b561018b366004611904565b60076020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610159565b6101ea6101e5366004611904565b6105d1565b005b6101ea6101fa366004611904565b6106db565b6102267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610159565b6002546003546004546005546102549392919084565b604080519485526020850193909352918301526060820152608001610159565b6101ea610282366004611921565b6107d1565b61014f610295366004611948565b6108b2565b61014f610a88565b61014f6102b0366004611981565b610a99565b61014f610d31565b61014f6102cb3660046118d8565b61104e565b600154610226906001600160a01b031681565b600654610226906001600160a01b031681565b6102267f000000000000000000000000000000000000000000000000000000000000000081565b61014f61032b366004611981565b61119b565b61014f60085481565b6102267f000000000000000000000000000000000000000000000000000000000000000081565b61014f611498565b6101ea336000908152600760205260409020600301805460ff19811660ff90911615179055565b600954604051637965d56d60e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691637965d56d916103e39160040190815260200190565b602060405180830381865afa158015610400573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042491906119d4565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610400573d6000803e3d6000fd5b604051632770a7eb60e21b8152336004820152602481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b505060405163150490ed60e31b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a82487689150602401602060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059591906119d4565b90506105cb6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168483611554565b92915050565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064891906119ed565b6001600160a01b0316336001600160a01b0316146000906106855760405162461bcd60e51b815260040161067c9190611a0a565b60405180910390fd5b50600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f86719c518c7d99ac94b3d405d462ea876ba5cd0a978461dc9a7c9862a9485886906020015b60405180910390a150565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075291906119ed565b6001600160a01b0316336001600160a01b0316146000906107865760405162461bcd60e51b815260040161067c9190611a0a565b50600180546001600160a01b0319166001600160a01b0383169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610824573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084891906119ed565b6001600160a01b0316336001600160a01b03161460009061087c5760405162461bcd60e51b815260040161067c9190611a0a565b5060088190556040518181527fac17d51c35ac71d3eddc155985908430e88946d51e2f6093e93c1c0aba08f6c4906020016106d0565b6001600160a01b03821660009081526007602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460ff1615156060820181905261096c576001600160a01b038416331461096c5760405162461bcd60e51b815260206004820152602660248201527f45787465726e616c20636c61696d7320666f72206163636f756e7420617265206044820152651b1bd8dad95960d21b606482015260840161067c565b6040810151600354108015906109855750604081015115155b15610a7e576001600160a01b038416600090815260076020908152604082208281556001810183905560028101839055600301805460ff1916905582015160098054919290916109d6908490611ac8565b90915550506020810151604051637965d56d60e01b81526004810191909152610a769085907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637965d56d90602401602060405180830381865afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7091906119d4565b856115bc565b9150506105cb565b5060009392505050565b600454600090610424904290611ac8565b8260008315610aad57610aaa610d31565b90505b8215610af957610ae86001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333088611783565b610af28183611adf565b9150610c11565b604051632770a7eb60e21b8152336004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b158015610b6157600080fd5b505af1158015610b75573d6000803e3d6000fd5b505060405163150490ed60e31b8152600481018590528392507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316915063a824876890602401602060405180830381865afa158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0491906119d4565b610c0e9190611adf565b91505b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9991906119d4565b821115610cf45760405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e74205245512062616c616e636520696e20636f6e746044820152631c9858dd60e21b606482015260840161067c565b610d286001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168784611554565b50949350505050565b6000804260028001541161104957600554600354604051630163b36d60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263058ecdb492610d9892600401918252602082015260400190565b6020604051808303816000875af1158015610db7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb91906119d4565b5060025460048054600090610df1908490611adf565b909155505060038054906000610e0683611af7565b90915550506006546001600160a01b031615610f0057600660009054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b50505050600660009054906101000a90046001600160a01b03166001600160a01b031663e7187e8a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd91906119d4565b90505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b91906119d4565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639358928b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101191906119d4565b905061101d8382611adf565b821161102d576000600555611046565b826110388284611ac8565b6110429190611ac8565b6005555b50505b919050565b60006110856001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085611783565b6040516319a948db60e21b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906366a5236c90602401602060405180830381865afa1580156110ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110e91906119d4565b6040516340c10f1960e01b81526001600160a01b038581166004830152602482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b15801561117d57600080fd5b505af1158015611191573d6000803e3d6000fd5b5050505092915050565b60006111d26001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087611783565b6111da610d31565b6111e49085611adf565b93508180156111f35750600854155b1561120a576112038585856115bc565b9050611490565b6001600160a01b03851660009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082018190526112c9576001600160a01b03861633146112c95760405162461bcd60e51b815260206004820152602860248201527f45787465726e616c206465706f7369747320666f72206163636f756e7420617260448201526719481b1bd8dad95960c21b606482015260840161067c565b60405180608001604052808683600001516112e49190611adf565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631bd39674886040518263ffffffff1660e01b815260040161133791815260200190565b602060405180830381865afa158015611354573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137891906119d4565b83602001516113879190611adf565b815260200160085460026001015461139f9190611adf565b815260608381015115156020928301526001600160a01b038981166000908152600784526040908190208551815593850151600185015584810151600285015593909101516003909201805460ff19169215159290921790915590516306f4e59d60e21b8152600481018790527f000000000000000000000000000000000000000000000000000000000000000090911690631bd3967490602401602060405180830381865afa158015611457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147b91906119d4565b6009546114889190611adf565b600955508390505b949350505050565b3360008181526007602081815260408084208151608081018352815481526001820180548286019081526002840180549584019590955260038401805460ff8116151560608601529989529690955291869055908590559084905560ff1990941690915551600980549293928490611511908490611ac8565b9091555050805161154e906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390611554565b51919050565b6040516001600160a01b0383166024820152604481018290526115b790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117c1565b505050565b600081156115ff576115f86001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168585611554565b508161177c565b6040516319a948db60e21b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990869083906366a5236c90602401602060405180830381865afa15801561166e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169291906119d4565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156116d857600080fd5b505af11580156116ec573d6000803e3d6000fd5b50506040516319a948db60e21b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506366a5236c9150602401602060405180830381865afa158015611755573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177991906119d4565b90505b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526117bb9085906323b872dd60e01b90608401611580565b50505050565b600080836001600160a01b0316836040516117dc9190611b12565b6000604051808303816000865af19150503d8060008114611819576040519150601f19603f3d011682016040523d82523d6000602084013e61181e565b606091505b50915091506000821415611836573d6000803e3d6000fd5b6117bb8151600014806118585750818060200190518101906118589190611b4d565b6101a281611869576118698161186d565b5050565b62461bcd60e51b6000908152602060045260076024526652455123000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6001600160a01b03811681146118d557600080fd5b50565b600080604083850312156118eb57600080fd5b82356118f6816118c0565b946020939093013593505050565b60006020828403121561191657600080fd5b813561177c816118c0565b60006020828403121561193357600080fd5b5035919050565b80151581146118d557600080fd5b6000806040838503121561195b57600080fd5b8235611966816118c0565b915060208301356119768161193a565b809150509250929050565b6000806000806080858703121561199757600080fd5b84356119a2816118c0565b93506020850135925060408501356119b98161193a565b915060608501356119c98161193a565b939692955090935050565b6000602082840312156119e657600080fd5b5051919050565b6000602082840312156119ff57600080fd5b815161177c816118c0565b600060208083526000845481600182811c915080831680611a2c57607f831692505b858310811415611a4a57634e487b7160e01b85526022600452602485fd5b878601838152602001818015611a675760018114611a7857611aa3565b60ff19861682528782019650611aa3565b60008b81526020902060005b86811015611a9d57815484820152908501908901611a84565b83019750505b50949998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611ada57611ada611ab2565b500390565b60008219821115611af257611af2611ab2565b500190565b6000600019821415611b0b57611b0b611ab2565b5060010190565b6000825160005b81811015611b335760208186018101518583015201611b19565b81811115611b42576000828501525b509190910192915050565b600060208284031215611b5f57600080fd5b815161177c8161193a56fea2646970667358221220ca0c02a14d3ae5d481e62ecdd3b984cfa12f0ab1d1531db65eb24387467cb3c364736f6c634300080b0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _req: string,
    _sREQ: string,
    _gREQ: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _req,
      _sREQ,
      _gREQ,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      _authority,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _req: string,
    _sREQ: string,
    _gREQ: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _req,
      _sREQ,
      _gREQ,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      _authority,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
