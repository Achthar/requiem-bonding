/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_req",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sREQ",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gREQ",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warmup",
        type: "uint256",
      },
    ],
    name: "WarmupSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQ",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributor",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distribute",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forfeit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gREQ",
    outputs: [
      {
        internalType: "contract IgREQ",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sREQ",
    outputs: [
      {
        internalType: "contract IsREQ",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondsToNextEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
    ],
    name: "setDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_warmupPeriod",
        type: "uint256",
      },
    ],
    name: "setWarmupLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_claim",
        type: "bool",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyInWarmup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_trigger",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_rebasing",
        type: "bool",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [
      {
        internalType: "uint256",
        name: "sBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "warmupInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lock",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warmupPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [
      {
        internalType: "uint256",
        name: "gBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610120604052600c60e08190526b15539055551213d49256915160a21b610100908152620000319160009190620001f1565b503480156200003f57600080fd5b50604051620026d8380380620026d88339810160408190526200006291620002b4565b600180546001600160a01b0319166001600160a01b0383169081179091556040518291907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a2506001600160a01b038716620000fd5760405162461bcd60e51b81526020600482015260116024820152705a65726f20616464726573733a2052455160781b60448201526064015b60405180910390fd5b6001600160a01b038088166080528616620001505760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a207352455160701b6044820152606401620000f4565b6001600160a01b0380871660a0528516620001a35760405162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a206752455160701b6044820152606401620000f4565b506001600160a01b0390931660c052604080516080810182528381526020810183905290810184905260006060909101819052600292909255600355600491909155600555506200036a9050565b828054620001ff906200032e565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b80516001600160a01b0381168114620002af57600080fd5b919050565b600080600080600080600060e0888a031215620002d057600080fd5b620002db8862000297565b9650620002eb6020890162000297565b9550620002fb6040890162000297565b9450606088015193506080880151925060a088015191506200032060c0890162000297565b905092959891949750929550565b600181811c908216806200034357607f821691505b6020821081036200036457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05161229662000442600039600081816103a5015281816105790152818161061701528181610e1c01528181610ebd015281816114fb015281816115ca01528181611c110152611d4b01526000818161024401528181610457015281816104d8015281816106b501528181610cd101528181610dae01528181611122015281816113be015281816114a4015281816117d4015281816119480152611bb401526000818161036201528181610f79015281816110a1015281816113380152818161164a0152611a8b01526122966000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063990966d5116100d8578063d26700251161008c578063ee487d9e11610066578063ee487d9e146103a0578063f3d86e4a146103c7578063ff9413d8146103cf57600080fd5b8063d26700251461035d578063d866c9d814610384578063deac361a1461039757600080fd5b8063bf376c7a116100bd578063bf376c7a1461030a578063bf7e214f1461031d578063bfe109281461033d57600080fd5b8063990966d5146102ef578063af14052c1461030257600080fd5b80637a9e5e4b1161013a5780639238d592116101145780639238d592146102c157806392fd2daf146102d45780639483c1d7146102e757600080fd5b80637a9e5e4b1461022c5780638cb649e11461023f578063900cf0cf1461028b57600080fd5b806339f476931161016b57806339f47693146101aa5780636746f4c2146101bd57806375619ab51461021757600080fd5b806320138641146101875780632986c0e5146101a2575b600080fd5b61018f610414565b6040519081526020015b60405180910390f35b61018f6104d4565b61018f6101b8366004611f62565b610541565b6101f56101cb366004611f8e565b60076020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6040805194855260208501939093529183015215156060820152608001610199565b61022a610225366004611f8e565b6106e2565b005b61022a61023a366004611f8e565b61085f565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610199565b6002546003546004546005546102a19392919084565b604080519485526020850193909352918301526060820152608001610199565b61022a6102cf366004611fab565b6109c8565b61018f6102e2366004611fd2565b610af7565b61018f610d69565b61018f6102fd36600461200b565b610d7a565b61018f6110d1565b61018f610318366004611f62565b611488565b6001546102669073ffffffffffffffffffffffffffffffffffffffff1681565b6006546102669073ffffffffffffffffffffffffffffffffffffffff1681565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b61018f61039236600461200b565b61162e565b61018f60085481565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b61018f6119d2565b61022a33600090815260076020526040902060030180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00811660ff90911615179055565b6009546040517f7965d56d00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691637965d56d9161048e9160040190815260200190565b602060405180830381865afa1580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf919061205e565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632986c0e56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ab573d6000803e3d6000fd5b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690639dc29fac90604401600060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b50506040517fa8248768000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16925063a82487689150602401602060405180830381865afa158015610675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610699919061205e565b90506106dc73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168483611ab9565b92915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107739190612077565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146000906107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db9190612094565b60405180910390fd5b50600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f86719c518c7d99ac94b3d405d462ea876ba5cd0a978461dc9a7c9862a9485886906020015b60405180910390a150565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190612077565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090610958576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db9190612094565b50600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad90600090a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a599190612077565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600090610ac1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db9190612094565b5060088190556040518181527fac17d51c35ac71d3eddc155985908430e88946d51e2f6093e93c1c0aba08f6c490602001610854565b73ffffffffffffffffffffffffffffffffffffffff821660009081526007602090815260408083208151608081018352815481526001820154938101939093526002810154918301919091526003015460ff16151560608201819052610bfc5773ffffffffffffffffffffffffffffffffffffffff84163314610bfc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45787465726e616c20636c61696d7320666f72206163636f756e74206172652060448201527f6c6f636b6564000000000000000000000000000000000000000000000000000060648201526084016107db565b604081015160035410801590610c155750604081015115155b15610d5f5773ffffffffffffffffffffffffffffffffffffffff841660009081526007602090815260408220828155600181018390556002810183905560030180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690558201516009805491929091610c919084906121a1565b909155505060208101516040517f7965d56d0000000000000000000000000000000000000000000000000000000081526004810191909152610d579085907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690637965d56d90602401602060405180830381865afa158015610d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d51919061205e565b85611b92565b9150506106dc565b5060009392505050565b6004546000906104cf9042906121a1565b8260008315610d8e57610d8b6110d1565b90505b8215610de757610dd673ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333088611dd7565b610de081836121b8565b9150610f4b565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690639dc29fac90604401600060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b50506040517fa8248768000000000000000000000000000000000000000000000000000000008152600481018590528392507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16915063a824876890602401602060405180830381865afa158015610f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3e919061205e565b610f4891906121b8565b91505b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff9919061205e565b821115611087576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f496e73756666696369656e74205245512062616c616e636520696e20636f6e7460448201527f726163740000000000000000000000000000000000000000000000000000000060648201526084016107db565b6110c873ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168784611ab9565b50949350505050565b60008042600280015411611483576005546003546040517f058ecdb400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169263058ecdb49261115e92600401918252602082015260400190565b6020604051808303816000875af115801561117d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a1919061205e565b50600254600480546000906111b79084906121b8565b9091555050600380549060006111cc836121d0565b909155505060065473ffffffffffffffffffffffffffffffffffffffff161561130757600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4fc6b6d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561125957600080fd5b505af115801561126d573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7187e8a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156112e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611304919061205e565b90505b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b8919061205e565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639358928b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b919061205e565b905061145783826121b8565b8211611467576000600555611480565b8261147282846121a1565b61147c91906121a1565b6005555b50505b919050565b60006114cc73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333085611dd7565b6040517f66a5236c000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906366a5236c90602401602060405180830381865afa158015611557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157b919061205e565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018390529192507f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b15801561161057600080fd5b505af1158015611624573d6000803e3d6000fd5b5050505092915050565b600061167273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333087611dd7565b61167a6110d1565b61168490856121b8565b93508180156116935750600854155b156116aa576116a3858585611b92565b90506119ca565b73ffffffffffffffffffffffffffffffffffffffff851660009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082018190526117b25773ffffffffffffffffffffffffffffffffffffffff861633146117b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45787465726e616c206465706f7369747320666f72206163636f756e7420617260448201527f65206c6f636b656400000000000000000000000000000000000000000000000060648201526084016107db565b60405180608001604052808683600001516117cd91906121b8565b81526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631bd39674886040518263ffffffff1660e01b815260040161182d91815260200190565b602060405180830381865afa15801561184a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186e919061205e565b836020015161187d91906121b8565b815260200160085460026001015461189591906121b8565b8152606083810151151560209283015273ffffffffffffffffffffffffffffffffffffffff898116600090815260078452604090819020855181559385015160018501558481015160028501559390910151600390920180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169215159290921790915590517f1bd39674000000000000000000000000000000000000000000000000000000008152600481018790527f000000000000000000000000000000000000000000000000000000000000000090911690631bd3967490602401602060405180830381865afa158015611991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b5919061205e565b6009546119c291906121b8565b600955508390505b949350505050565b3360008181526007602081815260408084208151608081018352815481526001820180548286019081526002840180549584019590955260038401805460ff811615156060860152998952969095529186905590859055908490557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090941690915551600980549293928490611a699084906121a1565b90915550508051611ab39073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016903390611ab9565b51919050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052611b8d9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e3b565b505050565b60008115611be257611bdb73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168585611ab9565b5081611dd0565b6040517f66a5236c000000000000000000000000000000000000000000000000000000008152600481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906340c10f1990869083906366a5236c90602401602060405180830381865afa158015611c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9b919061205e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b158015611d0657600080fd5b505af1158015611d1a573d6000803e3d6000fd5b50506040517f66a5236c000000000000000000000000000000000000000000000000000000008152600481018690527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1692506366a5236c9150602401602060405180830381865afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd919061205e565b90505b9392505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611e359085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b0b565b50505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051611e639190612208565b6000604051808303816000865af19150503d8060008114611ea0576040519150601f19603f3d011682016040523d82523d6000602084013e611ea5565b606091505b50909250905081611eba573d6000803e3d6000fd5b80511580611ed7575080806020019051810190611ed79190612243565b611e35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f534146455f45524332305f43414c4c5f4641494c45440000000000000000000060448201526064016107db565b73ffffffffffffffffffffffffffffffffffffffff81168114611f5f57600080fd5b50565b60008060408385031215611f7557600080fd5b8235611f8081611f3d565b946020939093013593505050565b600060208284031215611fa057600080fd5b8135611dd081611f3d565b600060208284031215611fbd57600080fd5b5035919050565b8015158114611f5f57600080fd5b60008060408385031215611fe557600080fd5b8235611ff081611f3d565b9150602083013561200081611fc4565b809150509250929050565b6000806000806080858703121561202157600080fd5b843561202c81611f3d565b935060208501359250604085013561204381611fc4565b9150606085013561205381611fc4565b939692955090935050565b60006020828403121561207057600080fd5b5051919050565b60006020828403121561208957600080fd5b8151611dd081611f3d565b600060208083526000845481600182811c9150808316806120b657607f831692505b85831081036120ec577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015612109576001811461213857612163565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861682528782019650612163565b60008b81526020902060005b8681101561215d57815484820152908501908901612144565b83019750505b50949998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156121b3576121b3612172565b500390565b600082198211156121cb576121cb612172565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361220157612201612172565b5060010190565b6000825160005b81811015612229576020818601810151858301520161220f565b81811115612238576000828501525b509190910192915050565b60006020828403121561225557600080fd5b8151611dd081611fc456fea2646970667358221220fdf3a42ebaa8ab9a06f33d7f2fe3ef4ee67b47aaad43b349f61144219b85cfa564736f6c634300080d0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _req: string,
    _sREQ: string,
    _gREQ: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _req,
      _sREQ,
      _gREQ,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      _authority,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _req: string,
    _sREQ: string,
    _gREQ: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _req,
      _sREQ,
      _gREQ,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      _authority,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
