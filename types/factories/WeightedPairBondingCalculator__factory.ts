/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedPairBondingCalculator,
  WeightedPairBondingCalculatorInterface,
} from "../WeightedPairBondingCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_QUOTE",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "QUOTE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "getTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
    ],
    name: "markdown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "valuation",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161095938038061095983398101604081905261002f91610053565b6001600160a01b03811661004257600080fd5b6001600160a01b0316608052610083565b60006020828403121561006557600080fd5b81516001600160a01b038116811461007c57600080fd5b9392505050565b6080516108ae6100ab6000396000818160a20152818161030c01526103f201526108ae6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806332da80a3146100515780634249719f14610077578063686375491461008a5780639c5798391461009d575b600080fd5b61006461005f3660046104c4565b6100e9565b6040519081526020015b60405180910390f35b6100646100853660046104e8565b6100fa565b6100646100983660046104c4565b610199565b6100c47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161006e565b60006100f482610199565b92915050565b60008061010684610199565b905060008473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610155573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101799190610514565b905080610186858461055c565b6101909190610599565b95945050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b91906105d4565b90506000808473ffffffffffffffffffffffffffffffffffffffff1663a5ea11da6040518163ffffffff1660e01b8152600401608060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061067a565b5050915091508473ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f491906106ce565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff160361039d57606083015161035b9063ffffffff841661055c565b83602001518263ffffffff168560400151610376919061055c565b610380919061055c565b61038a9190610599565b835161039691906106eb565b93506103f0565b60408301516103b29063ffffffff831661055c565b835160608501516103ca9063ffffffff86169061055c565b6103d4919061055c565b6103de9190610599565b83602001516103ed91906106eb565b93505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610703565b61048a906012610726565b61049590600a610869565b610190908561055c565b73ffffffffffffffffffffffffffffffffffffffff811681146104c157600080fd5b50565b6000602082840312156104d657600080fd5b81356104e18161049f565b9392505050565b600080604083850312156104fb57600080fd5b82356105068161049f565b946020939093013593505050565b60006020828403121561052657600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156105945761059461052d565b500290565b6000826105cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000608082840312156105e657600080fd5b6040516080810181811067ffffffffffffffff82111715610630577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b805163ffffffff8116811461067557600080fd5b919050565b6000806000806080858703121561069057600080fd5b61069985610661565b93506106a760208601610661565b92506106b560408601610661565b91506106c360608601610661565b905092959194509250565b6000602082840312156106e057600080fd5b81516104e18161049f565b600082198211156106fe576106fe61052d565b500190565b60006020828403121561071557600080fd5b815160ff811681146104e157600080fd5b600060ff821660ff8416808210156107405761074061052d565b90039392505050565b600181815b808511156107a257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156107885761078861052d565b8085161561079557918102915b93841c939080029061074e565b509250929050565b6000826107b9575060016100f4565b816107c6575060006100f4565b81600181146107dc57600281146107e657610802565b60019150506100f4565b60ff8411156107f7576107f761052d565b50506001821b6100f4565b5060208310610133831016604e8410600b8410161715610825575081810a6100f4565b61082f8383610749565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156108615761086161052d565b029392505050565b60006104e160ff8416836107aa56fea264697066735822122032547129f097bbc311a4d456aa04b94e61ae76e01d65a6d7eab1812c54f235c464736f6c634300080d0033";

export class WeightedPairBondingCalculator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _QUOTE: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedPairBondingCalculator> {
    return super.deploy(
      _QUOTE,
      overrides || {}
    ) as Promise<WeightedPairBondingCalculator>;
  }
  getDeployTransaction(
    _QUOTE: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_QUOTE, overrides || {});
  }
  attach(address: string): WeightedPairBondingCalculator {
    return super.attach(address) as WeightedPairBondingCalculator;
  }
  connect(signer: Signer): WeightedPairBondingCalculator__factory {
    return super.connect(signer) as WeightedPairBondingCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedPairBondingCalculatorInterface {
    return new utils.Interface(_abi) as WeightedPairBondingCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedPairBondingCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WeightedPairBondingCalculator;
  }
}
