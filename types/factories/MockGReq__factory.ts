/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockGReq, MockGReqInterface } from "../MockGReq";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sReq",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620013b8380380620013b8833981016040819052620000349162000178565b6040518060400160405280600e81526020016d476f7665726e616e63652052455160901b815250604051806040016040528060048152602001636752455160e01b8152506012828282826003908051906020019062000095929190620000d2565b508151620000ab906004906020850190620000d2565b506005805460ff191660ff9290921691909117905550505060809290925250620001ce9050565b828054620000e09062000192565b90600052602060002090601f0160209004810192826200010457600085556200014f565b82601f106200011f57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014f57825182559160200191906001019062000132565b506200015d92915062000161565b5090565b5b808211156200015d576000815560010162000162565b6000602082840312156200018b57600080fd5b5051919050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b6080516111c0620001f86000396000818161019f015281816104ca015261062301526111c06000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806340c10f19116100b25780639dc29fac11610081578063a824876811610066578063a824876814610273578063a9059cbb14610286578063dd62ed3e1461029957600080fd5b80639dc29fac1461024d578063a457c2d71461026057600080fd5b806340c10f19146101e957806366a5236c146101fc57806370a082311461020f57806395d89b411461024557600080fd5b806323b872dd116100ee57806323b872dd146101875780632986c0e51461019a578063313ce567146101c157806339509351146101d657600080fd5b806306fdde0314610120578063095ea7b31461013e5780631068361f1461016157806318160ddd14610175575b600080fd5b6101286102df565b6040516101359190610dc2565b60405180910390f35b61015161014c366004610e5e565b610371565b6040519015158152602001610135565b61017361016f366004610e88565b5050565b005b6002545b604051908152602001610135565b610151610195366004610ebb565b610388565b6101797f000000000000000000000000000000000000000000000000000000000000000081565b60055460405160ff9091168152602001610135565b6101516101e4366004610e5e565b610473565b6101736101f7366004610e5e565b6104bc565b61017961020a366004610ef7565b6104c6565b61017961021d366004610f10565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610128610514565b61017361025b366004610e5e565b610523565b61015161026e366004610e5e565b61052d565b610179610281366004610ef7565b610605565b610151610294366004610e5e565b610648565b6101796102a7366004610e88565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102ee90610f32565b80601f016020809104026020016040519081016040528092919081815260200182805461031a90610f32565b80156103675780601f1061033c57610100808354040283529160200191610367565b820191906000526020600020905b81548152906001019060200180831161034a57829003601f168201915b5050505050905090565b600061037e338484610655565b5060015b92915050565b6000610395848484610809565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548281101561045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104688533858403610655565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161037e9185906104b7908690610fb4565b610655565b61016f8282610abd565b60007f00000000000000000000000000000000000000000000000000000000000000006104f560055460ff1690565b61050090600a6110ec565b61050a90846110fb565b6103829190611138565b6060600480546102ee90610f32565b61016f8282610bdd565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156105ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610452565b6105fb3385858403610655565b5060019392505050565b600061061360055460ff1690565b61061e90600a6110ec565b61050a7f0000000000000000000000000000000000000000000000000000000000000000846110fb565b600061037e338484610809565b73ffffffffffffffffffffffffffffffffffffffff83166106f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff821661079a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166108ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff821661094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a05576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610a49908490610fb4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aaf91815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff8216610b3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610452565b8060026000828254610b4c9190610fb4565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610b86908490610fb4565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610c80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610d36576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610452565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610d72908490611173565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107fc565b600060208083528351808285015260005b81811015610def57858101830151858201604001528201610dd3565b81811115610e01576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610e5957600080fd5b919050565b60008060408385031215610e7157600080fd5b610e7a83610e35565b946020939093013593505050565b60008060408385031215610e9b57600080fd5b610ea483610e35565b9150610eb260208401610e35565b90509250929050565b600080600060608486031215610ed057600080fd5b610ed984610e35565b9250610ee760208501610e35565b9150604084013590509250925092565b600060208284031215610f0957600080fd5b5035919050565b600060208284031215610f2257600080fd5b610f2b82610e35565b9392505050565b600181811c90821680610f4657607f821691505b602082108103610f7f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610fc757610fc7610f85565b500190565b600181815b8085111561102557817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561100b5761100b610f85565b8085161561101857918102915b93841c9390800290610fd1565b509250929050565b60008261103c57506001610382565b8161104957506000610382565b816001811461105f576002811461106957611085565b6001915050610382565b60ff84111561107a5761107a610f85565b50506001821b610382565b5060208310610133831016604e8410600b84101617156110a8575081810a610382565b6110b28383610fcc565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156110e4576110e4610f85565b029392505050565b6000610f2b60ff84168361102d565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561113357611133610f85565b500290565b60008261116e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008282101561118557611185610f85565b50039056fea264697066735822122002d366b0e3de495e138111f636f457077c76a6a44e0505de180977dd43fd9e2464736f6c634300080d0033";

export class MockGReq__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGReq> {
    return super.deploy(_initIndex, overrides || {}) as Promise<MockGReq>;
  }
  getDeployTransaction(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initIndex, overrides || {});
  }
  attach(address: string): MockGReq {
    return super.attach(address) as MockGReq;
  }
  connect(signer: Signer): MockGReq__factory {
    return super.connect(signer) as MockGReq__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGReqInterface {
    return new utils.Interface(_abi) as MockGReqInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGReq {
    return new Contract(address, _abi, signerOrProvider) as MockGReq;
  }
}
