/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockGReq, MockGReqInterface } from "../MockGReq";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sReq",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000fe438038062000fe4833981016040819052620000349162000178565b6040518060400160405280600e81526020016d476f7665726e616e63652052455160901b815250604051806040016040528060048152602001636752455160e01b8152506012828282826003908051906020019062000095929190620000d2565b508151620000ab906004906020850190620000d2565b506005805460ff191660ff9290921691909117905550505060809290925250620001cf9050565b828054620000e09062000192565b90600052602060002090601f0160209004810192826200010457600085556200014f565b82601f106200011f57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014f57825182559160200191906001019062000132565b506200015d92915062000161565b5090565b5b808211156200015d576000815560010162000162565b6000602082840312156200018b57600080fd5b5051919050565b600181811c90821680620001a757607f821691505b60208210811415620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b608051610deb620001f96000396000818161018f0152818161045701526105710152610deb6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806340c10f19116100a25780639dc29fac116100715780639dc29fac14610230578063a457c2d714610243578063a824876814610256578063a9059cbb14610269578063dd62ed3e1461027c57600080fd5b806340c10f19146101d957806366a5236c146101ec57806370a08231146101ff57806395d89b411461022857600080fd5b806323b872dd116100de57806323b872dd146101775780632986c0e51461018a578063313ce567146101b157806339509351146101c657600080fd5b806306fdde0314610110578063095ea7b31461012e5780631068361f1461015157806318160ddd14610165575b600080fd5b6101186102b5565b6040516101259190610abc565b60405180910390f35b61014161013c366004610b2d565b610347565b6040519015158152602001610125565b61016361015f366004610b57565b5050565b005b6002545b604051908152602001610125565b610141610185366004610b8a565b61035e565b6101697f000000000000000000000000000000000000000000000000000000000000000081565b60055460405160ff9091168152602001610125565b6101416101d4366004610b2d565b61040d565b6101636101e7366004610b2d565b610449565b6101696101fa366004610bc6565b610453565b61016961020d366004610bdf565b6001600160a01b031660009081526020819052604090205490565b6101186104a1565b61016361023e366004610b2d565b6104b0565b610141610251366004610b2d565b6104ba565b610169610264366004610bc6565b610553565b610141610277366004610b2d565b610596565b61016961028a366004610b57565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102c490610c01565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610c01565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b60006103543384846105a3565b5060015b92915050565b600061036b8484846106c8565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103f55760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61040285338584036105a3565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610354918590610444908690610c52565b6105a3565b61015f8282610897565b60007f000000000000000000000000000000000000000000000000000000000000000061048260055460ff1690565b61048d90600a610d4e565b6104979084610d5d565b6103589190610d7c565b6060600480546102c490610c01565b61015f8282610976565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561053c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103ec565b61054933858584036105a3565b5060019392505050565b600061056160055460ff1690565b61056c90600a610d4e565b6104977f000000000000000000000000000000000000000000000000000000000000000084610d5d565b60006103543384846106c8565b6001600160a01b0383166106055760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ec565b6001600160a01b0382166106665760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ec565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661072c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103ec565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ec565b6001600160a01b038316600090815260208190526040902054818110156108065760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103ec565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061083d908490610c52565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088991815260200190565b60405180910390a350505050565b6001600160a01b0382166108ed5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ec565b80600260008282546108ff9190610c52565b90915550506001600160a01b0382166000908152602081905260408120805483929061092c908490610c52565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109d65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103ec565b6001600160a01b03821660009081526020819052604090205481811015610a4a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103ec565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a79908490610d9e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106bb565b600060208083528351808285015260005b81811015610ae957858101830151858201604001528201610acd565b81811115610afb576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b2857600080fd5b919050565b60008060408385031215610b4057600080fd5b610b4983610b11565b946020939093013593505050565b60008060408385031215610b6a57600080fd5b610b7383610b11565b9150610b8160208401610b11565b90509250929050565b600080600060608486031215610b9f57600080fd5b610ba884610b11565b9250610bb660208501610b11565b9150604084013590509250925092565b600060208284031215610bd857600080fd5b5035919050565b600060208284031215610bf157600080fd5b610bfa82610b11565b9392505050565b600181811c90821680610c1557607f821691505b60208210811415610c3657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c6557610c65610c3c565b500190565b600181815b80851115610ca5578160001904821115610c8b57610c8b610c3c565b80851615610c9857918102915b93841c9390800290610c6f565b509250929050565b600082610cbc57506001610358565b81610cc957506000610358565b8160018114610cdf5760028114610ce957610d05565b6001915050610358565b60ff841115610cfa57610cfa610c3c565b50506001821b610358565b5060208310610133831016604e8410600b8410161715610d28575081810a610358565b610d328383610c6a565b8060001904821115610d4657610d46610c3c565b029392505050565b6000610bfa60ff841683610cad565b6000816000190483118215151615610d7757610d77610c3c565b500290565b600082610d9957634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610db057610db0610c3c565b50039056fea2646970667358221220fbcffef201a68c16835560d774c72b099ff4ee3b44b5c941d9efc1975dc5903664736f6c634300080b0033";

export class MockGReq__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGReq> {
    return super.deploy(_initIndex, overrides || {}) as Promise<MockGReq>;
  }
  getDeployTransaction(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initIndex, overrides || {});
  }
  attach(address: string): MockGReq {
    return super.attach(address) as MockGReq;
  }
  connect(signer: Signer): MockGReq__factory {
    return super.connect(signer) as MockGReq__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGReqInterface {
    return new utils.Interface(_abi) as MockGReqInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGReq {
    return new Contract(address, _abi, signerOrProvider) as MockGReq;
  }
}
